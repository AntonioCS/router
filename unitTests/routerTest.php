<?php

if (function_exists('xdebug_disable'))
    xdebug_disable();

require '../src/router.php';

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-03-03 at 21:49:55.
 */
class routerTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var router
     */
    protected $object;

    private function addTheseRoutes() {
        $routes = array(
            'teste' => 'teste__1',
            '/index\.php\?(\d+)/' => 'index/$1',
            '/^(.+)$/'  => 'index/$1',
            '' => 'index'
        );

        $this->object->addRoute($routes);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new router;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }


    public function testClearRoutes() {
        $routes = $this->object->clearRoutes()->getRoutes();
        $this->assertTrue(empty($routes));
    }

    /**
     * @covers router::addRoute
     */
    public function testAddRoute() {
        $this->object->clearRoutes();
        $this->object->addRoute('teste','teste__1');
        $this->assertEquals(array('teste' => 'teste__1'),$this->object->getRoutes());
    }

    public function testAddRouteArray() {
        $this->object->clearRoutes();
        $route = array('teste' => 'teste__1');
        $this->object->addRoute($route);
        $this->assertEquals($route,$this->object->getRoutes());
    }


    public function testMatchRouteNormal() {
        $this->object->clearRoutes();
        $this->addTheseRoutes();

        $this->assertEquals('teste__1',$this->object->matchRoute('teste'));

        $this->assertEquals('index',$this->object->matchRoute(''));
    }

    public function testMatchRouteRegex() {
        $this->addTheseRoutes();
        $this->assertEquals('index/5',$this->object->matchRoute('index.php?5'));
        $this->assertEquals('index/test1',$this->object->matchRoute('test1'));
    }

    /**
    * @expectedException InvalidControllerDirectoryException
    */
    public function testSetControllersDir() {
        $this->object->setControllersDir('no_where/');
    }

    public function testSetControllersDirValid() {
        $this->object->setControllersDir('controllers/');

        $this->assertEquals(array('controllers/'),$this->object->getControllerDir());
    }



    /**
     * @covers router::run
     * @todo   Implement testRun().
     */
    public function testRun() {


    }
}
