<?php

if (function_exists('xdebug_disable'))
    xdebug_disable();

require '../../src/Router/router.php';
require '../../src/Router/dispatcher.php';
require '../../src/Router/Routes/route.php';
require '../../src/Router/Routes/routeDynamic.php';
require '../../src/Router/Routes/routeStatic.php';
require '../../lib/settingsManager/src/SettingsManager/settingsManager.php';


/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-03-03 at 21:49:55.
 */
class routerTest extends PHPUnit_Framework_TestCase
{    
    /**
     * @var Router\router
     */
    protected $object;
    
    /**
     * @var SettingsManager\settingsManager 
     */
    protected static $config = null;
    
    public static function setUpBeforeClass()
    {        
        require "../../config/config.php";        
        self::$config = new SettingsManager\settingsManager($routerConfig,true);
    }
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {        
        $this->object = new Router\router(self::$config);        
        $this->object->setControllersDir(dirname(__FILE__) . '/testAssets/modules/default/controllers/', 'default');
        
        //$this->object->addRoute('GET', 'teste', '');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {}

    
    
    /**
     * Using reflection to return the _config property of the router
     * http://www.php.net/manual/en/class.reflectionproperty.php#99661
     * 
     * @return ReflectionProperty  
     */
    private function getRouteObjectConfig() {
        $r = new ReflectionObject($this->object);
        $prop = $r->getProperty('_config');
        $prop->setAccessible(true);
        return $prop;
    }
    
    /**
     * 
     * @return array The configuration array of the route object (using reflection to make it available)
     */
    private function getRouteObjectConfigData() {      
        $data = $this->getRouteObjectConfig()->getValue($this->object);
        
        if (is_object($data)) {
            return $data->getData();
        }
        else {
            return $data;
        }         
    }
    
    /**
     * Change the private property _config
     * 
     * @param array $data 
     */
    private function setRouteObjectConfigData($data) {
        //$this->getRouteObjectConfig()->setValue($this->object, $data);
    }


    private function addTheseRoutes() {
        $routes = array(
            'get' => array(//This is wrong!! 
                //This part is suppose to be the name!! Not what is used to match
                'teste' => 'teste__1',
                '/index\.php\?(\d+)/' => 'index/$1',
                '/^(.+)$/'  => 'index/$1',
                '' => 'index'
             ),
            'put' => array(),
            'delete' => array(),
            'post' => array()
        );
        
        //$this->object->addRoutes($routes);
        //$this->object->addRoute('GET', 'teste',);

        //$this->object->addRoute($routes);
    }
        /**
     * @covers Router\router::getInstance
     * @todo   Implement testGetInstance().
     */
    public function testGetInstance()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::setControllersState
     * @todo   Implement testSetControllersState().
     */
    public function testSetControllersState()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::getControllersState
     * @todo   Implement testGetControllersState().
     */
    public function testGetControllersState()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::setControllersDir
     * @todo   Implement testSetControllersDir().
     */
    public function testSetControllersDir()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::getControllerDir
     * @todo   Implement testGetControllerDir().
     */
    public function testGetControllerDir()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::addControllerExt
     * @todo   Implement testAddControllerExt().
     */
    public function testAddControllerExt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::delControllerExt
     * @todo   Implement testDelControllerExt().
     */
    public function testDelControllerExt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::clearControllerExt
     * @todo   Implement testClearControllerExt().
     */
    public function testClearControllerExt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::addRoutes
     * @todo   Implement testAddRoutes().
     */
    public function testAddRoutes()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::addRoute
     * @todo   Implement testAddRoute().
     */
    public function testAddRoute()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::addGet
     * @todo   Implement testAddGet().
     */
    public function testAddGet()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::addPost
     * @todo   Implement testAddPost().
     */
    public function testAddPost()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::addPut
     * @todo   Implement testAddPut().
     */
    public function testAddPut()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::addDelete
     * @todo   Implement testAddDelete().
     */
    public function testAddDelete()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::getRoutes
     * @todo   Implement testGetRoutes().
     */
    public function testGetRoutes()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::clearRoutes
     * @todo   Implement testClearRoutes().
     */
    public function testClearRoutes()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::matchRoute
     * @todo   Implement testMatchRoute().
     */
    public function testMatchRoute()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::run     
     */
    public function testRunStaticRouteObject()
    {
        ob_start();
        $this->object->run('');
        $this->assertEquals(ob_get_clean(),'Hello World');
    }
    
    public function testRunStringRoute() {
        ob_start();
        $this->object->run('index');
        $this->assertEquals(ob_get_clean(),'Hello World');
    }

    /**
     * @covers Router\router::setView
     * @todo   Implement testSetView().
     */
    public function testSetView()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Router\router::getView
     * @todo   Implement testGetView().
     */
    public function testGetView()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

}
